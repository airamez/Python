print("BITWISE OPERATIONS")
print("[256][128][64][32][16][8][4][2][1]")
print("1 in binary is " + bin(1))
print("2 in binary is " + bin(2))
print("3 in binary is " + bin(3))
print("4 in binary is " + bin(4))
print("10 in binary is " + bin(10))
print("17 in binary is " + bin(17))
print("23 in binary is " + bin(23))
print("256 in binary is " + bin(256))
print("256 in binary is " + bin(256))
print("-1 in binary is " + bin(-1))
print("-2 in binary is " + bin(-2))
print("-256 in binary is " + bin(-256))

print('1100 is', int('1100', 2))
print('1111 is', int('1111', 2))
print('1010 is', int('1010', 2))
print('10111 is', int('10111', 2))

print("AND => &")
print("1 and 1")
print(bin(1))
print(bin(1))
print("", bin(1 & 1))

print("1 and 2")
print("", bin(1))
print(bin(2))
print("", bin(1 & 2))

print("21 and 10")
print(bin(21))
print("", bin(10))
print("   ", bin(21 & 10))

print("15 and 15")
print(bin(15))
print(bin(15))
print(bin(15 & 15))

print("OR => |")
print("1 or 1")
print(bin(1))
print(bin(1))
print(bin(1 | 1))

print("1 or 2")
print("", bin(1))
print(bin(2))
print("", bin(1 | 2))

print("21 or 10")
print(bin(21))
print("", bin(10))
print(bin(21 | 10))

print("15 or 15")
print(bin(15))
print(bin(15))
print(bin(15 | 15))

print("XOR => ^")
print("1 xor 1")
print(bin(1))
print(bin(1))
print(bin(1 ^ 1))

print("1 xor 2")
print("", bin(1))
print(bin(2))
print("", bin(1 ^ 2))

print("21 xor 10")
print(bin(21))
print("", bin(10))
print(bin(21 ^ 10))

print("15 xor 15")
print(bin(15))
print(bin(15))
print("  ", bin(15 ^ 15))

print("SHIFT BITS")

print("SHIFT LEFT")
print("2 << 1 =", 2 << 1)
print("2 << 2 =", 2 << 2)
print("3 << 1 =", 3 << 1)
print("3 << 2 =", 3 << 2)
print("15 << 1 =", 15 << 1)
print("15 << 2 =", 15 << 2)

print("SHIFT RIGHT")
print("2 >> 1 =", 2 >> 1)
print("2 >> 2 =", 2 >> 2)
print("3 >> 1 =", 3 >> 1)
print("3 >> 2 =", 3 >> 2)
print("15 >> 1 =", 15 >> 1)
print("15 >> 2 =", 15 >> 2)

